name: CI
on:
  pull_request:
    types:
      - labeled
      - opened
      - synchronize
      - reopened
    paths-ignore:
      - 'config/**'
      - '**.md'
  push:
    tags:
      - '*'

env:
  GO_VERSION: '1.22'
  REGISTRY_REPO: 'oci://ghcr.io/mirantis/hmc/charts-ci'

jobs:
  build:
    concurrency:
      group: build-${{ github.head_ref || github.run_id }}
      cancel-in-progress: true
    name: Build and Unit Test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.vars.outputs.version }}
      cutversion: ${{ steps.vars.outputs.cutversion }}
      clustername: ${{ steps.vars.outputs.clustername }}
      pr: ${{ steps.pr.outputs.result }}
    steps:
      - name: Get PR ref
        uses: actions/github-script@v7
        id: pr
        with:
          script: |
            const { data: pullRequest } = await github.rest.pulls.get({
              ...context.repo,
              pull_number: context.payload.pull_request.number,
            });
            return pullRequest
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{fromJSON(steps.pr.outputs.result).merge_commit_sha}}
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get outputs
        id: vars
        run: |
          GIT_VERSION=$(git describe --tags --always)
          echo "version=${GIT_VERSION:1}" >> $GITHUB_OUTPUT
          echo "clustername=ci-$(date +%s | cut -b6-10)" >> $GITHUB_OUTPUT
          echo "cutversion=$(echo ${GIT_VERSION:1} | sed 's/.*-//g')" >> $GITHUB_OUTPUT
      - name: Build and push HMC controller image
        uses: docker/build-push-action@v6
        with:
          build-args: |
            LD_FLAGS=-s -w -X github.com/Mirantis/hmc/internal/build.Version=${{ steps.vars.outputs.version }}
          context: .
          platforms: linux/amd64
          tags: |
            ghcr.io/mirantis/hmc/controller-ci:${{ steps.vars.outputs.version }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Prepare and push HMC template charts
        run: |
          make hmc-chart-release
          make helm-push

  provider-cloud-e2etest:
    name: E2E Cloud Providers
    runs-on: ubuntu-latest
    if: ${{ contains( github.event.pull_request.labels.*.name, 'test e2e') }}
    needs: build
    outputs:
      clustername: ${{ needs.build.outputs.clustername }}
      version: ${{ needs.build.outputs.version }}
      pr: ${{ needs.build.outputs.pr }}
    env:
      AWS_REGION: us-west-2
      AWS_ACCESS_KEY_ID: ${{ secrets.CI_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.CI_AWS_SECRET_ACCESS_KEY }}
      AZURE_REGION: westus2
      AZURE_SUBSCRIPTION_ID: ${{ secrets.CI_AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.CI_AZURE_TENANT_ID }}
      AZURE_CLIENT_ID: ${{ secrets.CI_AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.CI_AZURE_CLIENT_SECRET }}
      BUILD_VERSION: ${{ needs.build.outputs.cutversion }}
    steps:
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          detached: true
        timeout-minutes: 45
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{fromJSON(needs.build.outputs.pr).merge_commit_sha}}
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
      - uses: actions/checkout@v4
      - name: Run E2E tests
        env:
          GINKGO_LABEL_FILTER: 'provider:cloud'
          MANAGED_CLUSTER_NAME: ${{ needs.build.outputs.clustername }}
          IMG: 'ghcr.io/mirantis/hmc/controller-ci:${{ needs.build.outputs.version }}'
          VERSION: ${{ needs.build.outputs.version }}
        run: |
          make test-e2e
      - name: Archive test results
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: cloud-e2etest-logs
          path: |
            test/e2e/*.log
